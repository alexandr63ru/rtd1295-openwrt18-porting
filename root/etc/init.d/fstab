#!/bin/sh /etc/rc.common
# (C) 2013 openwrt.org
# 2019 jjm2473

START=40

onboot=0
mountswap=0
fstab_add_mount() {
	local device
	local fstype
	local options
	local uuid
	local label
	local target
	local cmd

	config_get uuid "$1" 'uuid'
	if [ -z "$uuid" ] ; then
		config_get label "$1" 'label'
		if [ -z "$label" ] ; then
			config_get device "$1" 'device'
		else
			device=`blkid -o device -L $label`
		fi
	else
		device=`blkid -o device -U $uuid`
	fi

	[ -n "$device" ] && {

		config_get_bool enabled "$1" enabled 0

		if [ "$mountswap" == "0" ] ; then

			config_get target "$1" 'target'
			[ -z "$target" ] && return 0

			[ "$target" == "/overlay" -a "$onboot" == "0" ] && return 0

			if [ $enabled -gt 0 ] ; then
				# mount
				config_get fstype "$1" 'fstype'

				case "$fstype" in
					hfs*)
						fstype="ufsd";;
					'ntfs')
						fstype="ufsd";;
					'exfat')
						fstype="ufsd";;
				esac

				grep -q "^nodev\t$fstype\$" /proc/filesystems || [ -b "$device" ] || return 1

				# umount pre mountpoint
				grep -Fw "$device" /proc/mounts | awk -F " " '{print $2}' | xargs -rn1 umount

				[ "$?" == "0" ] && {
					[ -d "$target" ] || mkdir -p "$target"

					cmd="mount"
					[ -n "$fstype" ] && cmd="$cmd -t $fstype"
					config_get options "$1" 'options'
					[ -n "$options" ] && cmd="$cmd -o $options"
					cmd="$cmd $device $target"

					$cmd && {
						[ "$target" == "/overlay" ] && {
							mkdir -p /overlay/upper /overlay/work
							mount -o noatime,lowerdir=/,upperdir=/overlay/upper,workdir=/overlay/work -t overlay "overlayfs:/overlay" /mnt \
								|| return 1

							# pivot
							mount --move /proc /mnt/proc

							pivot_root /mnt /mnt/rom || return 1

							mount --move /rom/dev /dev
							mount --move /rom/tmp /tmp
							mount --move /rom/sys /sys
							mount --move /rom/overlay /overlay
						}
					}
				}
			else
				grep -q -Fw "$device $target" /proc/mounts && umount -r "$target"
			fi
		else
			if [ $enabled -gt 0 ] ; then
				swapon $device
			else
				swapoff $device
			fi
		fi
	}
	
}

fstab_mount() {
	config_load fstab
	mountswap=0
	config_foreach fstab_add_mount mount
	mountswap=1
	config_foreach fstab_add_mount swap
}

start() {
	onboot=0
	fstab_mount
}

reload() {
	start
}

stop() {
	sync
	find /mnt/ -maxdepth 1 -mindepth 1 -type d | xargs -rn1 umount -r
}

boot() {
	onboot=1
	fstab_mount
}